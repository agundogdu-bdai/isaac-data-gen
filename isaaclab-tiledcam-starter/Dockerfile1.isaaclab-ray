# Isaac Lab 2.2.0 + Ray (lean)
FROM nvcr.io/nvidia/isaac-lab:2.2.0

ARG RAY_VER=2.31.0

# Accept EULAs and allow headless + root in container
ENV ACCEPT_EULA=Y \
    OMNI_KIT_ACCEPT_EULA=YES \
    OMNI_KIT_ALLOW_ROOT=1 \
    NVIDIA_VISIBLE_DEVICES=all \
    NVIDIA_DRIVER_CAPABILITIES=compute,utility,graphics \
    RAY_VERSION=${RAY_VER}

# Create shims for python/pip/ray and install Ray
RUN set -euxo pipefail && \
    printf '#!/bin/bash\nexec /isaac-sim/python.sh "$@"\n' > /usr/local/bin/python && chmod +x /usr/local/bin/python && \
    printf '#!/bin/bash\nexec /isaac-sim/python.sh -m pip "$@"\n' > /usr/local/bin/pip && chmod +x /usr/local/bin/pip && \
    /usr/local/bin/pip install --no-cache-dir --upgrade pip && \
    /usr/local/bin/pip install --no-cache-dir \
        "ray[default]==${RAY_VER}" \
        "ray[serve]==${RAY_VER}" && \
    printf '#!/bin/bash\nexec /isaac-sim/python.sh -m ray.scripts.scripts "$@"\n' > /usr/local/bin/ray && chmod +x /usr/local/bin/ray

# Verify Ray installation
RUN /isaac-sim/python.sh -c "from importlib.metadata import version; print('Ray version:', version('ray')); assert version('ray') == '${RAY_VER}'"

# Install additional dependencies for data collection and training
RUN /usr/local/bin/pip install --no-cache-dir \
    addict==2.4.0 \
    "aiohttp>=3.11.15,<3.12" \
    beartype==0.18.5 \
    diffusers==0.29.0 \
    einops==0.8.0 \
    filelock \
    "h5py>=3.9.0" \
    hydra-core==1.3.2 \
    lightning==2.5.1 \
    "numpy>=1.26,<=2.2.6" \
    "omegaconf>=2.2,<2.4" \
    "pandas>=2.1.0" \
    pillow==10.2.0 \
    psutil \
    "spatialmath-python~=1.1.13" \
    tqdm \
    "wandb[media,workspaces]>=0.20.0" \
    "albumentations>=2.0.0" \
    pydantic \
    open3d==0.18.0 \
    "opencv-python>=4.6.0.66,<=4.10.0.84" \
    "scikit-learn>=1.5.0" \
    "timm>=1.0.11,<=1.0.15" \
    "transformers>=4.42.3" \
    "moviepy>=1.0.3" \
    gcsfs==2023.6.0 \
    "pyarrow>=6.0.1" \
    "google-auth>=1.2" \
    gymnasium==0.29.1

# Install imageio with ffmpeg support for MP4 video encoding
RUN /usr/local/bin/pip install --no-cache-dir "imageio[ffmpeg]"

# Copy custom camera environment configuration and collection scripts
COPY joint_pos_env_camera_cfg.py /tmp/joint_pos_env_camera_cfg.py
COPY collect_with_camera_env.py /workspace/collect_with_camera_env.py
COPY vpl_saver.py /workspace/vpl_saver.py

# Install custom camera-enabled environment into IsaacLab
RUN set -euxo pipefail && \
    mkdir -p /workspace/isaaclab/source/isaaclab_tasks/isaaclab_tasks/manager_based/manipulation/cabinet/config/franka && \
    cp /tmp/joint_pos_env_camera_cfg.py /workspace/isaaclab/source/isaaclab_tasks/isaaclab_tasks/manager_based/manipulation/cabinet/config/franka/

RUN cat >> /workspace/isaaclab/source/isaaclab_tasks/isaaclab_tasks/manager_based/manipulation/cabinet/config/franka/__init__.py << 'EOF'

##
# Camera-Enabled Environments (Custom) - Pre-installed
##

gym.register(
    id="Isaac-Open-Drawer-Franka-Camera-v0",
    entry_point="isaaclab.envs:ManagerBasedRLEnv",
    kwargs={
        "env_cfg_entry_point": f"{__name__}.joint_pos_env_camera_cfg:FrankaCabinetEnvCameraCfg",
    },
    disable_env_checker=True,
)

gym.register(
    id="Isaac-Open-Drawer-Franka-Camera-Play-v0",
    entry_point="isaaclab.envs:ManagerBasedRLEnv",
    kwargs={
        "env_cfg_entry_point": f"{__name__}.joint_pos_env_camera_cfg:FrankaCabinetEnvCameraCfg_PLAY",
    },
    disable_env_checker=True,
)
EOF

RUN rm /tmp/joint_pos_env_camera_cfg.py && \
    echo "âœ“ Custom camera environments installed: Isaac-Open-Drawer-Franka-Camera-v0"

WORKDIR /workspace/isaaclab

ENTRYPOINT ["/workspace/isaaclab/isaaclab.sh", "-p"]